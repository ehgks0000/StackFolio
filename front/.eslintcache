[{"/Users/sooyoung/Projects/clone-velog/front/src/components/profile/Profile.tsx":"1","/Users/sooyoung/Projects/clone-velog/front/src/styles/theme.ts":"2","/Users/sooyoung/Projects/clone-velog/front/src/components/sections/SignIn.tsx":"3","/Users/sooyoung/Projects/clone-velog/front/src/components/common/PostPreview.tsx":"4","/Users/sooyoung/Projects/clone-velog/front/src/index.tsx":"5","/Users/sooyoung/Projects/clone-velog/front/src/components/tags/TagDetail.tsx":"6","/Users/sooyoung/Projects/clone-velog/front/src/components/questions/QuestionDetails.tsx":"7","/Users/sooyoung/Projects/clone-velog/front/src/components/questions/Questions.tsx":"8","/Users/sooyoung/Projects/clone-velog/front/src/components/material/Switch.tsx":"9","/Users/sooyoung/Projects/clone-velog/front/src/components/home/Topic.tsx":"10","/Users/sooyoung/Projects/clone-velog/front/src/components/Routes.tsx":"11","/Users/sooyoung/Projects/clone-velog/front/src/components/sections/Header.tsx":"12","/Users/sooyoung/Projects/clone-velog/front/src/components/home/Main.tsx":"13","/Users/sooyoung/Projects/clone-velog/front/src/components/search/SearchHome.tsx":"14","/Users/sooyoung/Projects/clone-velog/front/src/components/home/Home.tsx":"15","/Users/sooyoung/Projects/clone-velog/front/src/components/profile/Profile_Posts.tsx":"16","/Users/sooyoung/Projects/clone-velog/front/src/components/profile/Profile_Introduce.tsx":"17","/Users/sooyoung/Projects/clone-velog/front/src/components/profile/Profile_Series.tsx":"18"},{"size":4547,"mtime":1613540417891,"results":"19","hashOfConfig":"20"},{"size":1738,"mtime":1613532996637,"results":"21","hashOfConfig":"20"},{"size":3141,"mtime":1612934132854,"results":"22","hashOfConfig":"20"},{"size":2854,"mtime":1611920889293,"results":"23","hashOfConfig":"20"},{"size":280,"mtime":1610506338282,"results":"24","hashOfConfig":"20"},{"size":1503,"mtime":1613533526446,"results":"25","hashOfConfig":"20"},{"size":197,"mtime":1611240689297,"results":"26","hashOfConfig":"20"},{"size":1130,"mtime":1613562737973,"results":"27","hashOfConfig":"20"},{"size":2057,"mtime":1610468050420,"results":"28","hashOfConfig":"20"},{"size":1762,"mtime":1611238846541,"results":"29","hashOfConfig":"20"},{"size":1392,"mtime":1613562763185,"results":"30","hashOfConfig":"20"},{"size":2042,"mtime":1613562908878,"results":"31","hashOfConfig":"20"},{"size":2170,"mtime":1613563592434,"results":"32","hashOfConfig":"20"},{"size":184,"mtime":1613443112202,"results":"33","hashOfConfig":"20"},{"size":775,"mtime":1613446851789,"results":"34","hashOfConfig":"20"},{"size":904,"mtime":1611924778144,"results":"35","hashOfConfig":"20"},{"size":215,"mtime":1611923234408,"results":"36","hashOfConfig":"20"},{"size":206,"mtime":1611923439065,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"41"},"pw8oc3",{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/sooyoung/Projects/clone-velog/front/src/components/profile/Profile.tsx",["78"],"import MainWrapper from 'components/common/MainWrapper';\nimport { Box } from 'components/material/Box';\nimport { Button } from 'components/material/Button';\nimport { Number } from 'components/material/Number';\nimport {Title, Subtitle, Contents} from 'components/material/Text';\nimport { getUserProfileData, User_Profile } from 'db/User_Profile';\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport media from 'styles/media';\nimport ProfileIntroduce from './Profile_Introduce';\nimport ProfilePosts from './Profile_Posts';\nimport ProfileSeries from './Profile_Series';\nimport Treemap from './Treemap';\n\nconst Wrapper = styled.div`\n    display: grid;\n    grid-template-columns: 480px auto;\n    ${media.tablet`\n        grid-template-columns: 100%;\n        gap: 30px;\n    `}\n`\nconst HeadWrapper = styled.div`\n    display: grid;\n    margin: 25px 0 80px 0;\n    height: 150px;\n    grid-template-columns: 150px auto;\n    grid-template-rows: 60% 40%;\n    column-gap: 20px;\n    grid-template-areas:\n        \"img name\"\n        \"img followers\";\n`\nconst Image = styled.img`\n    grid-area: img; \n    width: 100%;\n    height: 100%;\n    border-radius: 50%;\n`\nconst NumbersWrapper = styled.div`\n    display: grid;\n    margin-bottom: 60px;\n    width: max(75%, 360px);\n    grid-template-columns: repeat(4, 1fr);\n`\ninterface CountBoxProps{\n    title: string\n    value: number\n}\nconst CountBox = ({title, value}: CountBoxProps) => (\n    <Box transparent direction=\"column\">\n        <Subtitle>{title}</Subtitle>\n        <Number fontSize={24} value={value}/>\n    </Box>\n)\nconst About = styled(Box)`\n    background-color: ${({theme}) => theme.mainBackground};\n    width: calc(100% - 40px);\n    margin: 0 20px;\n    padding: 10px;\n    word-wrap: break-word;\n    min-height: 50px;\n`\nconst InfoWrapper = styled.div`\n    display: grid;\n    width: 100%;\n    grid-template-columns: 30% 70%;\n`\n\n\nconst Profile = ({match}:any) => {\n    const {params:{id}} = match;\n    const [tabs, setTabs] = useState(0);\n    const [{username, avatar, bio, about}, setUserProfile] = useState<User_Profile>(\n    {\n        id,\n        created_at: \"\",\n        updated_at: \"\",\n        username: \"\",\n        bio: \"\",\n        about: \"\",\n        avatar: \"\",\n        social_links: {},\n        user: {\n            id,\n            created_at: \"\",\n            updated_at: \"\",\n            provider: \"google\",\n            social_id: \"\",\n            email: \"\",\n            is_verified: false\n        }\n    });\n\n    useEffect(()=>{\n        (async () => {\n            const userProfile = await getUserProfileData(id);\n            setUserProfile(userProfile);\n        })();\n    },[id])\n\n    return (\n    <MainWrapper>\n        <Wrapper>\n            {/* Profile */}\n            <Box direction=\"column\" justifyContent=\"flex-start\">\n                <HeadWrapper>\n                    <Image src={avatar}/>\n                    <Title alignItems=\"flex-end\">{username}</Title>\n                    <Contents alignItems=\"flex-start\">{bio}</Contents>\n                </HeadWrapper>\n                <NumbersWrapper>\n                    <CountBox title=\"팔로워\" value={300}/>\n                    <CountBox title=\"팔로잉\" value={19}/>\n                    <CountBox title=\"포스트\" value={30}/>\n                    <CountBox title=\"스코어\" value={348000}/>\n                </NumbersWrapper>\n                <About alignItems=\"flex-start\" left>{about}</About>\n                <Box style={{width:\"100%\"}} transparent left>\n                    <Subtitle bold>A</Subtitle>\n                    <Subtitle bold>B</Subtitle>\n                    <Subtitle bold>C</Subtitle>\n                    <Subtitle bold>D</Subtitle>\n                </Box>\n                <Treemap/>\n            </Box>\n            <Box transparent direction=\"column\" justifyContent=\"flex-start\" columnSpace={30}>\n                <Box transparent rowSpace={50}>\n                    <Button color=\"ghost\" fontSize={24} onClick={()=>setTabs(0)}> 글</Button>\n                    <Button color=\"ghost\" fontSize={24} onClick={()=>setTabs(1)}> 시리즈 </Button>\n                    <Button color=\"ghost\" fontSize={24} onClick={()=>setTabs(2)}> 자기소개 </Button>\n                </Box>\n                {\n                    tabs === 0 ? \n                        <ProfilePosts/> \n                    : tabs === 1 ? \n                        <ProfileSeries/> \n                    :   <ProfileIntroduce/>\n                }\n            </Box>\n        </Wrapper>\n    </MainWrapper>\n    )\n}\n\nexport default Profile;",["79","80"],"/Users/sooyoung/Projects/clone-velog/front/src/styles/theme.ts",[],"/Users/sooyoung/Projects/clone-velog/front/src/components/sections/SignIn.tsx",[],"/Users/sooyoung/Projects/clone-velog/front/src/components/common/PostPreview.tsx",["81","82","83"],"/Users/sooyoung/Projects/clone-velog/front/src/index.tsx",[],["84","85"],"/Users/sooyoung/Projects/clone-velog/front/src/components/tags/TagDetail.tsx",[],"/Users/sooyoung/Projects/clone-velog/front/src/components/questions/QuestionDetails.tsx",[],"/Users/sooyoung/Projects/clone-velog/front/src/components/questions/Questions.tsx",[],"/Users/sooyoung/Projects/clone-velog/front/src/components/material/Switch.tsx",[],"/Users/sooyoung/Projects/clone-velog/front/src/components/home/Topic.tsx",["86"],"/Users/sooyoung/Projects/clone-velog/front/src/components/Routes.tsx",["87","88"],"/Users/sooyoung/Projects/clone-velog/front/src/components/sections/Header.tsx",["89","90","91"],"import { toggleSignInModalState } from \"atoms/signInModal\";\nimport { toggleThemeState } from \"atoms/theme\";\nimport { userState } from \"atoms/user\";\nimport { Box } from \"components/material/Box\";\nimport { Button } from \"components/material/Button\";\nimport { Switch } from \"components/material/Switch\";\nimport React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useRecoilState, useRecoilValue } from \"recoil\";\nimport styled from \"styled-components\";\nimport SignIn from \"./SignIn\";\n\nconst Head = styled.header`\n    background-color:#27384B;\n    height: 55px;\n    padding: 5px 20px 5px 20px;\n    color: ${({theme}) => theme.default.text};\n    display: grid;\n    grid-template-columns : 150px calc(100% - 370px) 180px;\n`\nconst Buttons = styled.div`\n    display: grid;\n    grid-template-columns: repeat(4, 25%);\n`\n\nconst Header = () => {\n    const [user, setUser] = useRecoilState(userState);\n    const [theme, toggleTheme] = useRecoilState(toggleThemeState);\n    const [display, toggleDisplay] = useRecoilState(toggleSignInModalState);\n    const history = useHistory();\n    return (\n        <Head>\n            <Button color=\"ghost\" bold fontSize={36} onClick={()=>history.push('/')}> StackFolio </Button>\n            <Box transparent>\n                <Switch size=\"md\" checked={theme==='light'} onChange={()=>toggleTheme('')} />\n            </Box>\n            <Buttons>\n                <Button color=\"ghost\" onClick={()=>history.push('/search')}>검색</Button>\n                {\n                    user ?\n                    <>\n                    <Button color=\"ghost\">글쓰기</Button>\n                    <Button color=\"ghost\">알림</Button>\n                    <Button color=\"ghost\">프로필</Button>\n                    </>\n                    :\n                    <>\n                        <Button color=\"ghost\" onClick={()=>toggleDisplay('')}> 로그인</Button>\n                        <SignIn />\n                    </>\n                }\n            </Buttons>\n        </Head>\n    )\n}\nexport default Header;","/Users/sooyoung/Projects/clone-velog/front/src/components/home/Main.tsx",[],"/Users/sooyoung/Projects/clone-velog/front/src/components/search/SearchHome.tsx",[],"/Users/sooyoung/Projects/clone-velog/front/src/components/home/Home.tsx",["92","93","94","95"],"/Users/sooyoung/Projects/clone-velog/front/src/components/profile/Profile_Posts.tsx",["96"],"/Users/sooyoung/Projects/clone-velog/front/src/components/profile/Profile_Introduce.tsx",[],"/Users/sooyoung/Projects/clone-velog/front/src/components/profile/Profile_Series.tsx",[],{"ruleId":"97","severity":1,"message":"98","line":64,"column":7,"nodeType":"99","messageId":"100","endLine":64,"endColumn":18},{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","replacedBy":"104"},{"ruleId":"97","severity":1,"message":"105","line":1,"column":10,"nodeType":"99","messageId":"100","endLine":1,"endColumn":21},{"ruleId":"97","severity":1,"message":"106","line":2,"column":17,"nodeType":"99","messageId":"100","endLine":2,"endColumn":26},{"ruleId":"97","severity":1,"message":"107","line":2,"column":28,"nodeType":"99","messageId":"100","endLine":2,"endColumn":36},{"ruleId":"101","replacedBy":"108"},{"ruleId":"103","replacedBy":"109"},{"ruleId":"110","severity":1,"message":"111","line":47,"column":7,"nodeType":"112","endLine":47,"endColumn":9,"suggestions":"113"},{"ruleId":"97","severity":1,"message":"114","line":7,"column":10,"nodeType":"99","messageId":"100","endLine":7,"endColumn":13},{"ruleId":"97","severity":1,"message":"115","line":8,"column":8,"nodeType":"99","messageId":"100","endLine":8,"endColumn":14},{"ruleId":"97","severity":1,"message":"116","line":9,"column":26,"nodeType":"99","messageId":"100","endLine":9,"endColumn":40},{"ruleId":"97","severity":1,"message":"117","line":27,"column":18,"nodeType":"99","messageId":"100","endLine":27,"endColumn":25},{"ruleId":"97","severity":1,"message":"118","line":29,"column":12,"nodeType":"99","messageId":"100","endLine":29,"endColumn":19},{"ruleId":"97","severity":1,"message":"119","line":13,"column":12,"nodeType":"99","messageId":"100","endLine":13,"endColumn":19},{"ruleId":"97","severity":1,"message":"120","line":13,"column":21,"nodeType":"99","messageId":"100","endLine":13,"endColumn":31},{"ruleId":"97","severity":1,"message":"121","line":14,"column":12,"nodeType":"99","messageId":"100","endLine":14,"endColumn":16},{"ruleId":"97","severity":1,"message":"117","line":14,"column":18,"nodeType":"99","messageId":"100","endLine":14,"endColumn":25},{"ruleId":"97","severity":1,"message":"115","line":6,"column":8,"nodeType":"99","messageId":"100","endLine":6,"endColumn":14},"@typescript-eslint/no-unused-vars","'InfoWrapper' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["122"],"no-negated-in-lhs",["123"],"'getPostData' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.",["122"],["123"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'title'. Either include it or remove the dependency array.","ArrayExpression",["124"],"'Box' is defined but never used.","'styled' is defined but never used.","'useRecoilValue' is defined but never used.","'setUser' is assigned a value but never used.","'display' is assigned a value but never used.","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'user' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"125","fix":"126"},"Update the dependencies array to be: [title]",{"range":"127","text":"128"},[1185,1187],"[title]"]