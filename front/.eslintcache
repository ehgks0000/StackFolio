[{"/Users/sooyoung/Projects/clone-velog/front/src/components/profile/Profile.tsx":"1","/Users/sooyoung/Projects/clone-velog/front/src/styles/theme.ts":"2","/Users/sooyoung/Projects/clone-velog/front/src/components/sections/SignIn.tsx":"3","/Users/sooyoung/Projects/clone-velog/front/src/components/common/PostPreview.tsx":"4","/Users/sooyoung/Projects/clone-velog/front/src/index.tsx":"5","/Users/sooyoung/Projects/clone-velog/front/src/components/tags/TagDetail.tsx":"6","/Users/sooyoung/Projects/clone-velog/front/src/components/questions/QuestionDetails.tsx":"7","/Users/sooyoung/Projects/clone-velog/front/src/components/questions/Questions.tsx":"8","/Users/sooyoung/Projects/clone-velog/front/src/components/material/Switch.tsx":"9","/Users/sooyoung/Projects/clone-velog/front/src/components/home/Topic.tsx":"10","/Users/sooyoung/Projects/clone-velog/front/src/components/Routes.tsx":"11","/Users/sooyoung/Projects/clone-velog/front/src/components/sections/Header.tsx":"12","/Users/sooyoung/Projects/clone-velog/front/src/components/home/Main.tsx":"13","/Users/sooyoung/Projects/clone-velog/front/src/components/search/SearchHome.tsx":"14","/Users/sooyoung/Projects/clone-velog/front/src/db/User_Profile.ts":"15","/Users/sooyoung/Projects/clone-velog/front/src/components/material/Text.tsx":"16","/Users/sooyoung/Projects/clone-velog/front/src/components/common/MainWrapper.tsx":"17","/Users/sooyoung/Projects/clone-velog/front/src/components/home/Home.tsx":"18","/Users/sooyoung/Projects/clone-velog/front/src/db/Question.tsx":"19","/Users/sooyoung/Projects/clone-velog/front/src/components/common/QuestionPreview.tsx":"20","/Users/sooyoung/Projects/clone-velog/front/src/db/TopicQuestions.tsx":"21","/Users/sooyoung/Projects/clone-velog/front/src/components/home/TopicQuestions.tsx":"22","/Users/sooyoung/Projects/clone-velog/front/src/db/Topic.tsx":"23"},{"size":4547,"mtime":1613540417891,"results":"24","hashOfConfig":"25"},{"size":1738,"mtime":1613532996637,"results":"26","hashOfConfig":"25"},{"size":3141,"mtime":1612934132854,"results":"27","hashOfConfig":"25"},{"size":2854,"mtime":1611920889293,"results":"28","hashOfConfig":"25"},{"size":280,"mtime":1610506338282,"results":"29","hashOfConfig":"25"},{"size":1503,"mtime":1613533526446,"results":"30","hashOfConfig":"25"},{"size":197,"mtime":1611240689297,"results":"31","hashOfConfig":"25"},{"size":1130,"mtime":1613562737973,"results":"32","hashOfConfig":"25"},{"size":2057,"mtime":1610468050420,"results":"33","hashOfConfig":"25"},{"size":1864,"mtime":1614248415690,"results":"34","hashOfConfig":"25"},{"size":1392,"mtime":1613562763185,"results":"35","hashOfConfig":"25"},{"size":2042,"mtime":1613562908878,"results":"36","hashOfConfig":"25"},{"size":1657,"mtime":1614247290173,"results":"37","hashOfConfig":"25"},{"size":184,"mtime":1613443112202,"results":"38","hashOfConfig":"25"},{"size":931,"mtime":1611759570554,"results":"39","hashOfConfig":"25"},{"size":891,"mtime":1612803546926,"results":"40","hashOfConfig":"25"},{"size":430,"mtime":1614247400033,"results":"41","hashOfConfig":"25"},{"size":1121,"mtime":1614248514941,"results":"42","hashOfConfig":"25"},{"size":438,"mtime":1614248045205,"results":"43","hashOfConfig":"25"},{"size":2216,"mtime":1614248913302,"results":"44","hashOfConfig":"25"},{"size":1350,"mtime":1614248215579,"results":"45","hashOfConfig":"25"},{"size":1997,"mtime":1614248396879,"results":"46","hashOfConfig":"25"},{"size":4097,"mtime":1611109614508,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"51"},"pw8oc3",{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/sooyoung/Projects/clone-velog/front/src/components/profile/Profile.tsx",["99"],"import MainWrapper from 'components/common/MainWrapper';\nimport { Box } from 'components/material/Box';\nimport { Button } from 'components/material/Button';\nimport { Number } from 'components/material/Number';\nimport {Title, Subtitle, Contents} from 'components/material/Text';\nimport { getUserProfileData, User_Profile } from 'db/User_Profile';\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport media from 'styles/media';\nimport ProfileIntroduce from './Profile_Introduce';\nimport ProfilePosts from './Profile_Posts';\nimport ProfileSeries from './Profile_Series';\nimport Treemap from './Treemap';\n\nconst Wrapper = styled.div`\n    display: grid;\n    grid-template-columns: 480px auto;\n    ${media.tablet`\n        grid-template-columns: 100%;\n        gap: 30px;\n    `}\n`\nconst HeadWrapper = styled.div`\n    display: grid;\n    margin: 25px 0 80px 0;\n    height: 150px;\n    grid-template-columns: 150px auto;\n    grid-template-rows: 60% 40%;\n    column-gap: 20px;\n    grid-template-areas:\n        \"img name\"\n        \"img followers\";\n`\nconst Image = styled.img`\n    grid-area: img; \n    width: 100%;\n    height: 100%;\n    border-radius: 50%;\n`\nconst NumbersWrapper = styled.div`\n    display: grid;\n    margin-bottom: 60px;\n    width: max(75%, 360px);\n    grid-template-columns: repeat(4, 1fr);\n`\ninterface CountBoxProps{\n    title: string\n    value: number\n}\nconst CountBox = ({title, value}: CountBoxProps) => (\n    <Box transparent direction=\"column\">\n        <Subtitle>{title}</Subtitle>\n        <Number fontSize={24} value={value}/>\n    </Box>\n)\nconst About = styled(Box)`\n    background-color: ${({theme}) => theme.mainBackground};\n    width: calc(100% - 40px);\n    margin: 0 20px;\n    padding: 10px;\n    word-wrap: break-word;\n    min-height: 50px;\n`\nconst InfoWrapper = styled.div`\n    display: grid;\n    width: 100%;\n    grid-template-columns: 30% 70%;\n`\n\n\nconst Profile = ({match}:any) => {\n    const {params:{id}} = match;\n    const [tabs, setTabs] = useState(0);\n    const [{username, avatar, bio, about}, setUserProfile] = useState<User_Profile>(\n    {\n        id,\n        created_at: \"\",\n        updated_at: \"\",\n        username: \"\",\n        bio: \"\",\n        about: \"\",\n        avatar: \"\",\n        social_links: {},\n        user: {\n            id,\n            created_at: \"\",\n            updated_at: \"\",\n            provider: \"google\",\n            social_id: \"\",\n            email: \"\",\n            is_verified: false\n        }\n    });\n\n    useEffect(()=>{\n        (async () => {\n            const userProfile = await getUserProfileData(id);\n            setUserProfile(userProfile);\n        })();\n    },[id])\n\n    return (\n    <MainWrapper>\n        <Wrapper>\n            {/* Profile */}\n            <Box direction=\"column\" justifyContent=\"flex-start\">\n                <HeadWrapper>\n                    <Image src={avatar}/>\n                    <Title alignItems=\"flex-end\">{username}</Title>\n                    <Contents alignItems=\"flex-start\">{bio}</Contents>\n                </HeadWrapper>\n                <NumbersWrapper>\n                    <CountBox title=\"팔로워\" value={300}/>\n                    <CountBox title=\"팔로잉\" value={19}/>\n                    <CountBox title=\"포스트\" value={30}/>\n                    <CountBox title=\"스코어\" value={348000}/>\n                </NumbersWrapper>\n                <About alignItems=\"flex-start\" left>{about}</About>\n                <Box style={{width:\"100%\"}} transparent left>\n                    <Subtitle bold>A</Subtitle>\n                    <Subtitle bold>B</Subtitle>\n                    <Subtitle bold>C</Subtitle>\n                    <Subtitle bold>D</Subtitle>\n                </Box>\n                <Treemap/>\n            </Box>\n            <Box transparent direction=\"column\" justifyContent=\"flex-start\" columnSpace={30}>\n                <Box transparent rowSpace={50}>\n                    <Button color=\"ghost\" fontSize={24} onClick={()=>setTabs(0)}> 글</Button>\n                    <Button color=\"ghost\" fontSize={24} onClick={()=>setTabs(1)}> 시리즈 </Button>\n                    <Button color=\"ghost\" fontSize={24} onClick={()=>setTabs(2)}> 자기소개 </Button>\n                </Box>\n                {\n                    tabs === 0 ? \n                        <ProfilePosts/> \n                    : tabs === 1 ? \n                        <ProfileSeries/> \n                    :   <ProfileIntroduce/>\n                }\n            </Box>\n        </Wrapper>\n    </MainWrapper>\n    )\n}\n\nexport default Profile;",["100","101"],"/Users/sooyoung/Projects/clone-velog/front/src/styles/theme.ts",[],"/Users/sooyoung/Projects/clone-velog/front/src/components/sections/SignIn.tsx",[],"/Users/sooyoung/Projects/clone-velog/front/src/components/common/PostPreview.tsx",["102","103","104"],"import { getPostData, PostData } from 'db/Post';\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport Text from 'components/material/Text';\nimport Tag from './Tag';\nimport { Box } from 'components/material/Box';\nimport { AiOutlineLike } from 'react-icons/ai';\nimport { BiCommentDetail } from 'react-icons/bi';\nimport media from 'styles/media';\nimport { useHistory } from 'react-router-dom';\n\nconst Wrapper = styled.div`\n    display: grid;\n    grid-template-rows: 40px 40px 60px 16px 55px;\n    grid-template-columns: 70% 30%;\n    grid-template-areas: \n        \"tags tags\"\n        \"title img\"\n        \"contents img\"\n        \"info img\"\n        \"author likes\";\n    & > div:first-child{grid-area:tags;}\n    & > div:nth-child(2){grid-area:img;}\n    & > div:nth-child(3){grid-area:title;}\n    & > div:nth-child(4){grid-area:contents;}\n    & > div:nth-child(5){grid-area:info;}\n    & > div:nth-child(6){grid-area:author;}\n    & > div:nth-child(7){grid-area:likes;}\n    max-width: 100%;\n    box-shadow: 2px 2px 10px grey;\n    padding: 10px 10px 5px 10px;\n    ${media.phone`\n        grid-template-rows: 200px 40px 60px 16px 55px;\n        grid-template-areas: \n            \"img img\"\n            \"title title\"\n            \"contents contents\"\n            \"info info\"\n            \"author likes\";\n        & > div:first-child{display:none;}\n    `}\n`;\nconst TagsWrapper = styled.div`\n    display: flex;\n    align-items: center;\n    padding: 0 5px;\n    & > *:nth-child(n+2){\n        margin-left: 10px\n    }\n`\nconst Image = styled.img`\n    grid-area: img; \n    width: 100%;\n    height: 100%;\n`\nconst Avatar = styled.img`\n    background-color: #ddd;\n    border-radius: 50%;\n    width: 50px;\n    height: 50px;\n    margin: 2.5px;\n`\nconst ProfilePreview = styled.div`\n    display: grid;\n    grid-template-columns: 50px auto;\n    gap: 10px;\n`\n\nconst PostPreview = (props:PostData) => {\n    const history = useHistory();\n    const {tags, title, content, thumbnail, timestamp, author, likes, comments} = props;\n    return (\n        <Wrapper>\n            <TagsWrapper>\n                {tags.map(tag => <Tag key={tag} name={tag}/>)}\n            </TagsWrapper>\n            <Image src={thumbnail} alt=\"img\"/>\n            <Text bold left fontSize={21}>{title}</Text>\n            <Text>{content.length > 150 ? content.slice(0,150)+'...' : content}</Text>\n            <Text left bold >{timestamp} &nbsp; &nbsp;<BiCommentDetail/> &nbsp; {comments}</Text>\n            <ProfilePreview>\n                <Avatar onClick={()=>history.push(`/@${author}`)} />\n                <Text bold left>{author}</Text>\n            </ProfilePreview>\n            <Box transparent right>\n                <AiOutlineLike size={20}/> &nbsp;\n                <Text bold> {likes} </Text> &nbsp;\n            </Box>\n        </Wrapper>\n    )\n}\n\nexport default PostPreview;","/Users/sooyoung/Projects/clone-velog/front/src/index.tsx",[],["105","106"],"/Users/sooyoung/Projects/clone-velog/front/src/components/tags/TagDetail.tsx",[],"/Users/sooyoung/Projects/clone-velog/front/src/components/questions/QuestionDetails.tsx",[],"/Users/sooyoung/Projects/clone-velog/front/src/components/questions/Questions.tsx",[],"/Users/sooyoung/Projects/clone-velog/front/src/components/material/Switch.tsx",[],["107","108"],"/Users/sooyoung/Projects/clone-velog/front/src/components/home/Topic.tsx",["109"],"/Users/sooyoung/Projects/clone-velog/front/src/components/Routes.tsx",["110","111"],"/Users/sooyoung/Projects/clone-velog/front/src/components/sections/Header.tsx",["112","113","114"],"/Users/sooyoung/Projects/clone-velog/front/src/components/home/Main.tsx",[],"/Users/sooyoung/Projects/clone-velog/front/src/components/search/SearchHome.tsx",[],"/Users/sooyoung/Projects/clone-velog/front/src/db/User_Profile.ts",[],"/Users/sooyoung/Projects/clone-velog/front/src/components/material/Text.tsx",[],"/Users/sooyoung/Projects/clone-velog/front/src/components/common/MainWrapper.tsx",["115"],"/Users/sooyoung/Projects/clone-velog/front/src/components/home/Home.tsx",["116","117","118"],"/Users/sooyoung/Projects/clone-velog/front/src/db/Question.tsx",[],"/Users/sooyoung/Projects/clone-velog/front/src/components/common/QuestionPreview.tsx",[],"/Users/sooyoung/Projects/clone-velog/front/src/db/TopicQuestions.tsx",[],"/Users/sooyoung/Projects/clone-velog/front/src/components/home/TopicQuestions.tsx",["119"],"/Users/sooyoung/Projects/clone-velog/front/src/db/Topic.tsx",[],{"ruleId":"120","severity":1,"message":"121","line":64,"column":7,"nodeType":"122","messageId":"123","endLine":64,"endColumn":18},{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","replacedBy":"127"},{"ruleId":"120","severity":1,"message":"128","line":1,"column":10,"nodeType":"122","messageId":"123","endLine":1,"endColumn":21},{"ruleId":"120","severity":1,"message":"129","line":2,"column":17,"nodeType":"122","messageId":"123","endLine":2,"endColumn":26},{"ruleId":"120","severity":1,"message":"130","line":2,"column":28,"nodeType":"122","messageId":"123","endLine":2,"endColumn":36},{"ruleId":"124","replacedBy":"131"},{"ruleId":"126","replacedBy":"132"},{"ruleId":"124","replacedBy":"133"},{"ruleId":"126","replacedBy":"134"},{"ruleId":"135","severity":1,"message":"136","line":50,"column":7,"nodeType":"137","endLine":50,"endColumn":9,"suggestions":"138"},{"ruleId":"120","severity":1,"message":"139","line":7,"column":10,"nodeType":"122","messageId":"123","endLine":7,"endColumn":13},{"ruleId":"120","severity":1,"message":"140","line":8,"column":8,"nodeType":"122","messageId":"123","endLine":8,"endColumn":14},{"ruleId":"120","severity":1,"message":"141","line":9,"column":26,"nodeType":"122","messageId":"123","endLine":9,"endColumn":40},{"ruleId":"120","severity":1,"message":"142","line":27,"column":18,"nodeType":"122","messageId":"123","endLine":27,"endColumn":25},{"ruleId":"120","severity":1,"message":"143","line":29,"column":12,"nodeType":"122","messageId":"123","endLine":29,"endColumn":19},{"ruleId":"144","severity":1,"message":"145","line":9,"column":1,"nodeType":"146","endLine":15,"endColumn":3},{"ruleId":"120","severity":1,"message":"147","line":14,"column":12,"nodeType":"122","messageId":"123","endLine":14,"endColumn":19},{"ruleId":"120","severity":1,"message":"148","line":14,"column":21,"nodeType":"122","messageId":"123","endLine":14,"endColumn":31},{"ruleId":"120","severity":1,"message":"142","line":15,"column":18,"nodeType":"122","messageId":"123","endLine":15,"endColumn":25},{"ruleId":"135","severity":1,"message":"136","line":50,"column":7,"nodeType":"137","endLine":50,"endColumn":9,"suggestions":"149"},"@typescript-eslint/no-unused-vars","'InfoWrapper' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["150"],"no-negated-in-lhs",["151"],"'getPostData' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.",["150"],["151"],["150"],["151"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'title'. Either include it or remove the dependency array.","ArrayExpression",["152"],"'Box' is defined but never used.","'styled' is defined but never used.","'useRecoilValue' is defined but never used.","'setUser' is assigned a value but never used.","'display' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.",["153"],"no-global-assign","no-unsafe-negation",{"desc":"154","fix":"155"},{"desc":"154","fix":"156"},"Update the dependencies array to be: [title]",{"range":"157","text":"158"},{"range":"159","text":"158"},[1245,1247],"[title]",[1331,1333]]